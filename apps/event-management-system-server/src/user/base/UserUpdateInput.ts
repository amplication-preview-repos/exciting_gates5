/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  MaxLength,
  IsBoolean,
} from "class-validator";
import { PreferenceUpdateManyWithoutUsersInput } from "./PreferenceUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { EventUpdateManyWithoutUsersInput } from "./EventUpdateManyWithoutUsersInput";
import { NotificationUpdateManyWithoutUsersInput } from "./NotificationUpdateManyWithoutUsersInput";
import { PurchasedTicketUpdateManyWithoutUsersInput } from "./PurchasedTicketUpdateManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { SubAdminUpdateManyWithoutUsersInput } from "./SubAdminUpdateManyWithoutUsersInput";
import { WalletWhereUniqueInput } from "../../wallet/base/WalletWhereUniqueInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => PreferenceUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PreferenceUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PreferenceUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  eventPreferences?: PreferenceUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EventUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EventUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EventUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  events?: EventUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isBan?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  mobile?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nationality?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nickName?: string | null;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: () => PurchasedTicketUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PurchasedTicketUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PurchasedTicketUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  purchasedTickets?: PurchasedTicketUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => SubAdminUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => SubAdminUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => SubAdminUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  subAdmins?: SubAdminUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: () => WalletWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WalletWhereUniqueInput)
  @IsOptional()
  @Field(() => WalletWhereUniqueInput, {
    nullable: true,
  })
  wallet?: WalletWhereUniqueInput | null;
}

export { UserUpdateInput as UserUpdateInput };
