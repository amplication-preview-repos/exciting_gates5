/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  TicketTier as PrismaTicketTier,
  PurchasedTicket as PrismaPurchasedTicket,
  Event as PrismaEvent,
} from "@prisma/client";

export class TicketTierServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TicketTierCountArgs, "select">
  ): Promise<number> {
    return this.prisma.ticketTier.count(args);
  }

  async ticketTiers(
    args: Prisma.TicketTierFindManyArgs
  ): Promise<PrismaTicketTier[]> {
    return this.prisma.ticketTier.findMany(args);
  }
  async ticketTier(
    args: Prisma.TicketTierFindUniqueArgs
  ): Promise<PrismaTicketTier | null> {
    return this.prisma.ticketTier.findUnique(args);
  }
  async createTicketTier(
    args: Prisma.TicketTierCreateArgs
  ): Promise<PrismaTicketTier> {
    return this.prisma.ticketTier.create(args);
  }
  async updateTicketTier(
    args: Prisma.TicketTierUpdateArgs
  ): Promise<PrismaTicketTier> {
    return this.prisma.ticketTier.update(args);
  }
  async deleteTicketTier(
    args: Prisma.TicketTierDeleteArgs
  ): Promise<PrismaTicketTier> {
    return this.prisma.ticketTier.delete(args);
  }

  async findPurchasedTickets(
    parentId: string,
    args: Prisma.PurchasedTicketFindManyArgs
  ): Promise<PrismaPurchasedTicket[]> {
    return this.prisma.ticketTier
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .purchasedTickets(args);
  }

  async getEvent(parentId: string): Promise<PrismaEvent | null> {
    return this.prisma.ticketTier
      .findUnique({
        where: { id: parentId },
      })
      .event();
  }
}
